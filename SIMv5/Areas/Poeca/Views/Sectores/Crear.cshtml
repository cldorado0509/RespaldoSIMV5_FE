@using SIM.Areas.Poeca.Models
@using SIM.Data.Poeca
@model DPOEAIR_SECTOR

@{
    ViewBag.Title = "POECA | Crear Sector";

    List<DxListItem> medidas = ViewData["medidas"] as List<DxListItem>;
}
<div class="container-fluid maxed">
    <div class="col-xs-12">
        <h2>Crear Sector</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.S_NOMBRE, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.S_NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.S_NOMBRE, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.S_DESCRIPCION, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.S_DESCRIPCION, new { htmlAttributes = new { @class = "form-control", @rows = 6 } })
                        @Html.ValidationMessageFor(model => model.S_DESCRIPCION, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TPOEAIR_SECTOR_MEDIDA, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.TPOEAIR_SECTOR_MEDIDA, "", new { @class = "text-danger" })
                        <div class="selection-list-box">
                            @(
                                Html.DevExtreme().List()
                                    .ID("dx-list-medidas")
                                    .DataSource(medidas)
                                    .ShowSelectionControls(true)
                                    .SearchEnabled(true)
                                    .SelectionMode(ListSelectionMode.Multiple)
                                    .Height(187)
                                    .ScrollingEnabled(true)
                                    .ShowScrollbar(ShowScrollbarMode.OnHover)
                                    .UseNativeScrolling(true)
                                    .SearchExpr("text")
                            )
                            @Html.RouteLink("Crear nueva Medida", "", new { controller = "Medidas", action = "Crear" }, new { @class = "btn btn-block" })
                        </div>
                    </div>
                </div>
                @Html.ListBox("medidas", new MultiSelectList(medidas, "id", "text"), new { @class = "hidden" })
            </div>
            <div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.ID_RESPONSABLE, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ID_RESPONSABLE, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ID_RESPONSABLE, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="form-group">
                    <div class="row">
                        <div class="col-xs-6">
                            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-block btn-danger" })
                        </div>

                        <div class="col-xs-6">
                            <input type="submit" value="Guardar" class="btn btn-block btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundlesv5/jqueryval")

    <script>
        $(function () {
            $("form").submit(function () {
                let dxList = $("#dx-list-medidas").dxList("instance");

                let selectedItems = dxList.option("selectedItems");

                $("#medidas").val(selectedItems.map((item) => {
                    return item.id;
                }));
            });
        });
    </script>
}
