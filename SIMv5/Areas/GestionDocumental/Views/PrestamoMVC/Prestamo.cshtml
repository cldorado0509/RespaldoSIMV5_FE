@using System.Web.UI.WebControls

<script type="text/javascript">
    function PrestamoOnClick(s, e) {
        var documents;

        if (lbDocumentos.GetItemCount() == 0)
        {
            alert('No hay documentos registrados.');
            return;
        } else {
            ProcessPanel.Show();

            for (i = 0; i < lbDocumentos.GetItemCount() ; i++) {
                if (documents == null)
                    documents = lbDocumentos.GetItem(i).value;
                else
                    documents += '^' + lbDocumentos.GetItem(i).value;
            }

            var idTerceroSel = ASPxClientControl.GetControlCollection().GetByName("RepLegal.ID_TERCERO");

            $.ajax({
                type: "POST",
                //cache: false,
                //contentType: false,
                //processData: false,
                url: '@Url.Action("PrestamoDocumentos", "Prestamo", new { area = "GestionDocumental" })',
                data: { idTercero: parseInt(idTerceroSel.GetText()), documentosIDs: documents, observacion: txtObservacionesPrestamo.GetText() },
                success: function (response) {
                    var dataResult;
                    dataResult = response.split('%');

                    if (dataResult[0] == 'FAIL') {
                        ProcessPanel.Hide();
                        alert(dataResult[1]);
                    }
                    else {
                        ProcessPanel.Hide();
                        alert(dataResult[1]);
                        lbDocumentos.ClearItems();
                    }

                    txtCodigoDocumento.SetText('');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    ProcessPanel.Hide();
                    alert("Status: " + textStatus); alert("Error: " + errorThrown);
                }
            });
        }
    }

    function OnKeyDownCB(s, e) {
        if (e.htmlEvent.keyCode == 13) {
            txtObservaciones.Focus();
        }
    }

    function OnKeyDownObs(s, e) {
        var documents = '';
        var ID;

        if (e.htmlEvent.keyCode == 13) {
            if (txtCodigoDocumento.GetText() != '') {
                ID = txtCodigoDocumento.GetText().trim();

                ProcessPanel.Show();

                for (i = 0; i < lbDocumentos.GetItemCount() ; i++) {
                    if (ID == lbDocumentos.GetItem(i).text.substring(0, ID.length)) {
                        ProcessPanel.Hide();
                        if (confirm('El Documento ya se encuentra registrado. Desea borrarlo de la lista ?')) {
                            lbDocumentos.RemoveItem(i);
                        }

                        txtCodigoDocumento.SetText('');
                        txtObservaciones.SetText('');
                        txtCodigoDocumento.Focus();
                        return;
                    }
                }

                $.ajax({
                    type: "POST",
                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    url: '@Url.Action("ValidarPrestamoDocumento", "Prestamo", new { area = "GestionDocumental" })',
                    data: { documentoID: ID },
                    success: function (response) {
                        var dataResult;
                        dataResult = response.split('%');

                        if (dataResult[0] == 'FAIL') {
                            ProcessPanel.Hide();
                            alert(dataResult[1]);
                        }
                        else {
                            lbDocumentos.AddItem([dataResult[3], dataResult[4], txtObservaciones.GetText(), dataResult[5]], dataResult[2] + '|' + txtObservaciones.GetText());
                            ProcessPanel.Hide();
                        }

                        txtCodigoDocumento.SetText('');
                        txtObservaciones.SetText('');
                        txtCodigoDocumento.Focus();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        ProcessPanel.Hide();
                        alert("Status: " + textStatus); alert("Error: " + errorThrown);
                    }
                });
                return;
            }
            e.SetText('');
        }
    }

    function OnTextChangedDoc(s, e) {
        cambioDoc = true;
    }

    function OnKeyDownDoc(s, e) {
        if (e.htmlEvent.keyCode == 13) {
            ReloadTercero();
        }
    }

    function OnLostFocusDoc(s, e) {
        if (cambioDoc)
            ReloadTercero();
    }

    function ReloadTercero() {
        cambioDoc = false;

        var repLegalTipoDoc = ASPxClientControl.GetControlCollection().GetByName("TERCERO.ID_TIPODOCUMENTO");
        var repLegalDoc = ASPxClientControl.GetControlCollection().GetByName("TERCERO.N_DOCUMENTON");

        if (repLegalTipoDoc.GetText().trim() == '' || repLegalDoc.GetText().trim() == '' || !repLegalDoc.GetIsValid())
            return;

        ProcessPanel.Show();
        $.ajax({
            type: "POST",
            //cache: false,
            //contentType: false,
            //processData: false,
            url: '@Url.Action("frmAdministrarTerceroBasico", "Tercero", new { area = "General" })',
            data: { tipodoc: repLegalTipoDoc.GetValue(), documento: repLegalDoc.GetText(), ok: "", alerta: "El Tercero NO existe.", permiteGuardar: true },
            success: function (response) {
                $("#TerceroContainer").html(response);
                var txtTerceroCargado = ASPxClientControl.GetControlCollection().GetByName("txtTerceroCargado");
                if (txtTerceroCargado.GetText() == '1') {
                    lbDocumentos.ClearItems();
                    $('#PrestamoContainer').show();
                    txtCodigoDocumento.SetEnabled(true);
                } else {
                    $('#PrestamoContainer').hide();
                    txtCodigoDocumento.SetEnabled(false);

                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                ProcessPanel.Hide();
                alert("Status: " + textStatus); alert("Error: " + errorThrown);
            }
        });
    }

    function OnActiveTabChanged(s, e) {
        selectedTab = s.GetActiveTab().name;

        if (selectedTab == 'tpgPrestamos')
            GridViewNC.PerformCallback();
        else
            GridViewItems.PerformCallback();
    }
</script>

<br />
<br />
<br />
<div class="panel panel-default" style="padding-bottom: 10px">
    <div class="panel-heading">
        <h3 class="panel-title">
            <label>Pr&eacute;stamo de Documentos</label>
        </h3>
    </div>
    <div style="padding: 15px">

        @Html.DevExpress().RoundPanel(settings =>
    {
        settings.Name = "rpTercero";
        settings.EncodeHtml = false;
        settings.HeaderText = "Tercero";
        settings.EnableTheming = true;
        settings.View = DevExpress.Web.ASPxRoundPanel.View.Standard;
        settings.Width = Unit.Percentage(100);
        settings.Style.Add("padding-left", "15px");
        settings.Style.Add("padding-right", "15px");
        settings.Style.Add("padding-top", "10px");
        settings.Style.Add("padding-botom", "40px");

        settings.SetContent(() =>
        {
            Html.RenderAction("frmAdministrarTerceroBasico", "Tercero", new { area = "General" });
        });
    }).GetHtml()
        <br />
        <div id="PrestamoContainer" style="display:none">
            <div class="row" style="padding:5px">
                <div class="col-md-4">
                    @Html.DevExpress().Label(settingsLabel =>
                    {
                        settingsLabel.EncodeHtml = false;
                        settingsLabel.Text = "C&oacute;digo Documento:";
                    }).GetHtml()
                </div>
                <div class="col-md-8">
                    @Html.DevExpress().Label(settingsLabel =>
                    {
                        settingsLabel.EncodeHtml = false;
                        settingsLabel.Text = "Observaciones Documento:";
                    }).GetHtml()
                </div>
            </div>
            <div class="row" style="padding:5px">
                <div class="col-md-4">
                    @Html.DevExpress().TextBox(settingsTextBox =>
                    {
                        settingsTextBox.Name = "txtCodigoDocumento";
                        settingsTextBox.Width = Unit.Percentage(90);
                        settingsTextBox.Properties.ClientSideEvents.KeyDown = "OnKeyDownCB";
                        //settingsTextBox.Enabled = false;
                    }).GetHtml()
                </div>
                <div class="col-md-8">
                    @Html.DevExpress().TextBox(settingsTextBox =>
                    {
                        settingsTextBox.Name = "txtObservaciones";
                        settingsTextBox.Width = Unit.Percentage(100);
                        settingsTextBox.Properties.ClientSideEvents.KeyDown = "OnKeyDownObs";
                    }).GetHtml()
                </div>
            </div>
            <br />
            @Html.DevExpress().ListBox(
                settings =>
                {
                    settings.Name = "lbDocumentos";
                    //settings.CallbackRouteValues = new { Controller = "Editors", Action = "ListBoxPartial" };
                    settings.Width = Unit.Percentage(100);
                    settings.Height = 200;
                    settings.Properties.EnableClientSideAPI = true;
                    settings.Properties.SelectionMode = ListEditSelectionMode.Single;
                    settings.Properties.ValueField = "ID_IDENTIFICADOR";
                    settings.Properties.ValueType = typeof(int);
                    settings.Properties.Columns.Add("S_IDENTIFICADOR", "ID").Width = Unit.Percentage(20);
                    settings.Properties.Columns.Add("S_DESCRIPCION", "Documento").Width = Unit.Percentage(30);
                    settings.Properties.Columns.Add("S_OBSERVACIONES", "Observaciones").Width = Unit.Percentage(30);
                    settings.Properties.Columns.Add("S_TIPO", "Tipo").Width = Unit.Percentage(20);
                }
            ).BindList(Model).GetHtml()

            @Html.DevExpress().Label(settingsLabel =>
            {
                settingsLabel.EncodeHtml = false;
                settingsLabel.Text = "Observaciones Pr&eacute;stamo:";
            }).GetHtml()
            <div class="row" style="padding:5px">
                <div class="col-md-9">
                    @Html.DevExpress().TextBox(settingsTextBox =>
                    {
                        settingsTextBox.Name = "txtObservacionesPrestamo";
                        settingsTextBox.Width = Unit.Percentage(100);
                    }).GetHtml()
                </div>
                <div class="col-md-3">
                    <div style="width:150px; float:right">
                        @Html.DevExpress().Button(settingsButton =>
                        {
                            settingsButton.EncodeHtml = false;
                            settingsButton.Name = "btnPrestamo";
                            settingsButton.Text = "Realizar Pr&eacute;stamo";
                            settingsButton.Width = Unit.Pixel(150);
                            settingsButton.ClientSideEvents.Click = "PrestamoOnClick"; ;
                        }).GetHtml()

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
